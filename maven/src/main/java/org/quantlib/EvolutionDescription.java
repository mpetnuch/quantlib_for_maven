/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class EvolutionDescription implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected EvolutionDescription(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EvolutionDescription obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(EvolutionDescription obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_EvolutionDescription(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
   this.delete();
  }

  public EvolutionDescription(DoubleVector rateTimes, DoubleVector evolutionTimes, UnsignedIntPairVector relevanceRates) {
    this(QuantLibJNI.new_EvolutionDescription__SWIG_0(DoubleVector.getCPtr(rateTimes), rateTimes, DoubleVector.getCPtr(evolutionTimes), evolutionTimes, UnsignedIntPairVector.getCPtr(relevanceRates), relevanceRates), true);
  }

  public EvolutionDescription(DoubleVector rateTimes, DoubleVector evolutionTimes) {
    this(QuantLibJNI.new_EvolutionDescription__SWIG_1(DoubleVector.getCPtr(rateTimes), rateTimes, DoubleVector.getCPtr(evolutionTimes), evolutionTimes), true);
  }

  public EvolutionDescription(DoubleVector rateTimes) {
    this(QuantLibJNI.new_EvolutionDescription__SWIG_2(DoubleVector.getCPtr(rateTimes), rateTimes), true);
  }

  public DoubleVector rateTimes() {
    return new DoubleVector(QuantLibJNI.EvolutionDescription_rateTimes(swigCPtr, this), false);
  }

  public DoubleVector rateTaus() {
    return new DoubleVector(QuantLibJNI.EvolutionDescription_rateTaus(swigCPtr, this), false);
  }

  public DoubleVector evolutionTimes() {
    return new DoubleVector(QuantLibJNI.EvolutionDescription_evolutionTimes(swigCPtr, this), false);
  }

  public UnsignedIntVector firstAliveRate() {
    return new UnsignedIntVector(QuantLibJNI.EvolutionDescription_firstAliveRate(swigCPtr, this), true);
  }

  public UnsignedIntPairVector relevanceRates() {
    return new UnsignedIntPairVector(QuantLibJNI.EvolutionDescription_relevanceRates(swigCPtr, this), true);
  }

  public long numberOfRates() {
    return QuantLibJNI.EvolutionDescription_numberOfRates(swigCPtr, this);
  }

  public long numberOfSteps() {
    return QuantLibJNI.EvolutionDescription_numberOfSteps(swigCPtr, this);
  }

}
