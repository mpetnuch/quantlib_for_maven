/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class SwapRateHelper extends RateHelper implements AutoCloseable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected SwapRateHelper(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.SwapRateHelper_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SwapRateHelper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_SwapRateHelper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  @Override
  public void close() {
   this.delete();
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth, OptionalBool withIndexedCoupons) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_0(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth, OptionalBool.getCPtr(withIndexedCoupons), withIndexedCoupons), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_1(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_2(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_3(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue()), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_4(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_5(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_6(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_7(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread), true);
  }

  public SwapRateHelper(QuoteHandle rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_8(QuoteHandle.getCPtr(rate), rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth, OptionalBool withIndexedCoupons) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_9(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth, OptionalBool.getCPtr(withIndexedCoupons), withIndexedCoupons), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_10(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_11(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays, Pillar.Choice pillar) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_12(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays, pillar.swigValue()), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, long settlementDays) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_13(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, settlementDays), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_14(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread, Period fwdStart) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_15(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index, QuoteHandle spread) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_16(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread), true);
  }

  public SwapRateHelper(double rate, Period tenor, Calendar calendar, Frequency fixedFrequency, BusinessDayConvention fixedConvention, DayCounter fixedDayCount, IborIndex index) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_17(rate, Period.getCPtr(tenor), tenor, Calendar.getCPtr(calendar), calendar, fixedFrequency.swigValue(), fixedConvention.swigValue(), DayCounter.getCPtr(fixedDayCount), fixedDayCount, IborIndex.getCPtr(index), index), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth, OptionalBool withIndexedCoupons) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_18(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth, OptionalBool.getCPtr(withIndexedCoupons), withIndexedCoupons), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_19(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_20(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_21(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue()), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_22(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread, Period fwdStart) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_23(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index, QuoteHandle spread) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_24(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread), true);
  }

  public SwapRateHelper(QuoteHandle rate, SwapIndex index) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_25(QuoteHandle.getCPtr(rate), rate, SwapIndex.getCPtr(index), index), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth, OptionalBool withIndexedCoupons) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_26(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth, OptionalBool.getCPtr(withIndexedCoupons), withIndexedCoupons), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate, boolean endOfMonth) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_27(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, endOfMonth), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_28(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve, Pillar.Choice pillar) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_29(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve, pillar.swigValue()), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart, YieldTermStructureHandle discountingCurve) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_30(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart, YieldTermStructureHandle.getCPtr(discountingCurve), discountingCurve), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread, Period fwdStart) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_31(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread, Period.getCPtr(fwdStart), fwdStart), true);
  }

  public SwapRateHelper(double rate, SwapIndex index, QuoteHandle spread) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_32(rate, SwapIndex.getCPtr(index), index, QuoteHandle.getCPtr(spread), spread), true);
  }

  public SwapRateHelper(double rate, SwapIndex index) {
    this(QuantLibJNI.new_SwapRateHelper__SWIG_33(rate, SwapIndex.getCPtr(index), index), true);
  }

  public double spread() {
    return QuantLibJNI.SwapRateHelper_spread(swigCPtr, this);
  }

  public VanillaSwap swap() {
    long cPtr = QuantLibJNI.SwapRateHelper_swap(swigCPtr, this);
    return (cPtr == 0) ? null : new VanillaSwap(cPtr, true);
  }

}
