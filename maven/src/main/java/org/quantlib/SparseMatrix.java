/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class SparseMatrix implements AutoCloseable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwn;

  protected SparseMatrix(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SparseMatrix obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwn = own;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_SparseMatrix(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
   this.delete();
  }

  public void setRow_idx(UnsignedIntVector value) {
    QuantLibJNI.SparseMatrix_row_idx_set(swigCPtr, this, UnsignedIntVector.getCPtr(value), value);
  }

  public UnsignedIntVector getRow_idx() {
    long cPtr = QuantLibJNI.SparseMatrix_row_idx_get(swigCPtr, this);
    return (cPtr == 0) ? null : new UnsignedIntVector(cPtr, false);
  }

  public void setCol_idx(UnsignedIntVector value) {
    QuantLibJNI.SparseMatrix_col_idx_set(swigCPtr, this, UnsignedIntVector.getCPtr(value), value);
  }

  public UnsignedIntVector getCol_idx() {
    long cPtr = QuantLibJNI.SparseMatrix_col_idx_get(swigCPtr, this);
    return (cPtr == 0) ? null : new UnsignedIntVector(cPtr, false);
  }

  public void setData(DoubleVector value) {
    QuantLibJNI.SparseMatrix_data_set(swigCPtr, this, DoubleVector.getCPtr(value), value);
  }

  public DoubleVector getData() {
    long cPtr = QuantLibJNI.SparseMatrix_data_get(swigCPtr, this);
    return (cPtr == 0) ? null : new DoubleVector(cPtr, false);
  }

  public SparseMatrix() {
    this(QuantLibJNI.new_SparseMatrix(), true);
  }

}
