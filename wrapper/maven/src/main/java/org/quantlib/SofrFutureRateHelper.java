/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class SofrFutureRateHelper extends OvernightIndexFutureRateHelper implements AutoCloseable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected SofrFutureRateHelper(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.SofrFutureRateHelper_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SofrFutureRateHelper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_SofrFutureRateHelper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  @Override
  public void close() {
   this.delete();
  }

  public SofrFutureRateHelper(QuoteHandle price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index, QuoteHandle convexityAdjustment, RateAveraging.Type averagingMethod) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_0(QuoteHandle.getCPtr(price), price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index, QuoteHandle.getCPtr(convexityAdjustment), convexityAdjustment, averagingMethod.swigValue()), true);
  }

  public SofrFutureRateHelper(QuoteHandle price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index, QuoteHandle convexityAdjustment) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_1(QuoteHandle.getCPtr(price), price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index, QuoteHandle.getCPtr(convexityAdjustment), convexityAdjustment), true);
  }

  public SofrFutureRateHelper(QuoteHandle price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_2(QuoteHandle.getCPtr(price), price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index), true);
  }

  public SofrFutureRateHelper(double price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index, double convexityAdjustment, RateAveraging.Type averagingMethod) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_3(price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index, convexityAdjustment, averagingMethod.swigValue()), true);
  }

  public SofrFutureRateHelper(double price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index, double convexityAdjustment) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_4(price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index, convexityAdjustment), true);
  }

  public SofrFutureRateHelper(double price, Month referenceMonth, int referenceYear, Frequency referenceFreq, OvernightIndex index) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_5(price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), OvernightIndex.getCPtr(index), index), true);
  }

  public SofrFutureRateHelper(QuoteHandle price, Month referenceMonth, int referenceYear, Frequency referenceFreq, QuoteHandle convexityAdjustment) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_6(QuoteHandle.getCPtr(price), price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), QuoteHandle.getCPtr(convexityAdjustment), convexityAdjustment), true);
  }

  public SofrFutureRateHelper(QuoteHandle price, Month referenceMonth, int referenceYear, Frequency referenceFreq) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_7(QuoteHandle.getCPtr(price), price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue()), true);
  }

  public SofrFutureRateHelper(double price, Month referenceMonth, int referenceYear, Frequency referenceFreq, double convexityAdjustment) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_8(price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue(), convexityAdjustment), true);
  }

  public SofrFutureRateHelper(double price, Month referenceMonth, int referenceYear, Frequency referenceFreq) {
    this(QuantLibJNI.new_SofrFutureRateHelper__SWIG_9(price, referenceMonth.swigValue(), referenceYear, referenceFreq.swigValue()), true);
  }

}
