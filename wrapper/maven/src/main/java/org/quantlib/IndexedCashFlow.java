/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class IndexedCashFlow extends CashFlow implements AutoCloseable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected IndexedCashFlow(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.IndexedCashFlow_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IndexedCashFlow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_IndexedCashFlow(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  @Override
  public void close() {
   this.delete();
  }

  public IndexedCashFlow(double notional, Index index, Date baseDate, Date fixingDate, Date paymentDate, boolean growthOnly) {
    this(QuantLibJNI.new_IndexedCashFlow__SWIG_0(notional, Index.getCPtr(index), index, Date.getCPtr(baseDate), baseDate, Date.getCPtr(fixingDate), fixingDate, Date.getCPtr(paymentDate), paymentDate, growthOnly), true);
  }

  public IndexedCashFlow(double notional, Index index, Date baseDate, Date fixingDate, Date paymentDate) {
    this(QuantLibJNI.new_IndexedCashFlow__SWIG_1(notional, Index.getCPtr(index), index, Date.getCPtr(baseDate), baseDate, Date.getCPtr(fixingDate), fixingDate, Date.getCPtr(paymentDate), paymentDate), true);
  }

  public double notional() {
    return QuantLibJNI.IndexedCashFlow_notional(swigCPtr, this);
  }

  public Date baseDate() {
    return new Date(QuantLibJNI.IndexedCashFlow_baseDate(swigCPtr, this), true);
  }

  public Date fixingDate() {
    return new Date(QuantLibJNI.IndexedCashFlow_fixingDate(swigCPtr, this), true);
  }

  public double baseFixing() {
    return QuantLibJNI.IndexedCashFlow_baseFixing(swigCPtr, this);
  }

  public double indexFixing() {
    return QuantLibJNI.IndexedCashFlow_indexFixing(swigCPtr, this);
  }

  public Index index() {
    long cPtr = QuantLibJNI.IndexedCashFlow_index(swigCPtr, this);
    return (cPtr == 0) ? null : new Index(cPtr, true);
  }

  public boolean growthOnly() {
    return QuantLibJNI.IndexedCashFlow_growthOnly(swigCPtr, this);
  }

}
