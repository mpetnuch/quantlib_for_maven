/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class MoroInvCumulativeLecuyerGaussianRsg implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected MoroInvCumulativeLecuyerGaussianRsg(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MoroInvCumulativeLecuyerGaussianRsg obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(MoroInvCumulativeLecuyerGaussianRsg obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_MoroInvCumulativeLecuyerGaussianRsg(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
   this.delete();
  }

  public MoroInvCumulativeLecuyerGaussianRsg(LecuyerUniformRsg uniformSequenceGenerator) {
    this(QuantLibJNI.new_MoroInvCumulativeLecuyerGaussianRsg__SWIG_0(LecuyerUniformRsg.getCPtr(uniformSequenceGenerator), uniformSequenceGenerator), true);
  }

  public MoroInvCumulativeLecuyerGaussianRsg(LecuyerUniformRsg uniformSequenceGenerator, MoroInverseCumulativeNormal inverseCumulative) {
    this(QuantLibJNI.new_MoroInvCumulativeLecuyerGaussianRsg__SWIG_1(LecuyerUniformRsg.getCPtr(uniformSequenceGenerator), uniformSequenceGenerator, MoroInverseCumulativeNormal.getCPtr(inverseCumulative), inverseCumulative), true);
  }

  public SampleRealVector nextSequence() {
    return new SampleRealVector(QuantLibJNI.MoroInvCumulativeLecuyerGaussianRsg_nextSequence(swigCPtr, this), false);
  }

  public long dimension() {
    return QuantLibJNI.MoroInvCumulativeLecuyerGaussianRsg_dimension(swigCPtr, this);
  }

}
