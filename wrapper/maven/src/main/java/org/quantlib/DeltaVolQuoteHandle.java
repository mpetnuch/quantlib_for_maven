/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class DeltaVolQuoteHandle implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DeltaVolQuoteHandle(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DeltaVolQuoteHandle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(DeltaVolQuoteHandle obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_DeltaVolQuoteHandle(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
   this.delete();
  }

  public DeltaVolQuoteHandle(DeltaVolQuote arg0) {
    this(QuantLibJNI.new_DeltaVolQuoteHandle__SWIG_0(DeltaVolQuote.getCPtr(arg0), arg0), true);
  }

  public DeltaVolQuoteHandle() {
    this(QuantLibJNI.new_DeltaVolQuoteHandle__SWIG_1(), true);
  }

  public DeltaVolQuote __deref__() {
    long cPtr = QuantLibJNI.DeltaVolQuoteHandle___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new DeltaVolQuote(cPtr, true);
  }

  public DeltaVolQuote currentLink() {
    long cPtr = QuantLibJNI.DeltaVolQuoteHandle_currentLink(swigCPtr, this);
    return (cPtr == 0) ? null : new DeltaVolQuote(cPtr, true);
  }

  public boolean empty() {
    return QuantLibJNI.DeltaVolQuoteHandle_empty(swigCPtr, this);
  }

  public Observable asObservable() {
    long cPtr = QuantLibJNI.DeltaVolQuoteHandle_asObservable(swigCPtr, this);
    return (cPtr == 0) ? null : new Observable(cPtr, true);
  }

  public double delta() {
    return QuantLibJNI.DeltaVolQuoteHandle_delta(swigCPtr, this);
  }

  public double maturity() {
    return QuantLibJNI.DeltaVolQuoteHandle_maturity(swigCPtr, this);
  }

  public DeltaVolQuote.AtmType atmType() {
    return DeltaVolQuote.AtmType.swigToEnum(QuantLibJNI.DeltaVolQuoteHandle_atmType(swigCPtr, this));
  }

  public DeltaVolQuote.DeltaType deltaType() {
    return DeltaVolQuote.DeltaType.swigToEnum(QuantLibJNI.DeltaVolQuoteHandle_deltaType(swigCPtr, this));
  }

  public double value() {
    return QuantLibJNI.DeltaVolQuoteHandle_value(swigCPtr, this);
  }

  public boolean isValid() {
    return QuantLibJNI.DeltaVolQuoteHandle_isValid(swigCPtr, this);
  }

}
