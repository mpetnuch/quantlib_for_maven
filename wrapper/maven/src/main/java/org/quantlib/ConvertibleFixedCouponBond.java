/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

import java.lang.AutoCloseable;

public class ConvertibleFixedCouponBond extends Bond implements AutoCloseable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected ConvertibleFixedCouponBond(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.ConvertibleFixedCouponBond_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConvertibleFixedCouponBond obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_ConvertibleFixedCouponBond(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  @Override
  public void close() {
   this.delete();
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule, double redemption, Period exCouponPeriod, Calendar exCouponCalendar, BusinessDayConvention exCouponConvention, boolean exCouponEndOfMonth) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_0(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule, redemption, Period.getCPtr(exCouponPeriod), exCouponPeriod, Calendar.getCPtr(exCouponCalendar), exCouponCalendar, exCouponConvention.swigValue(), exCouponEndOfMonth), true);
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule, double redemption, Period exCouponPeriod, Calendar exCouponCalendar, BusinessDayConvention exCouponConvention) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_1(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule, redemption, Period.getCPtr(exCouponPeriod), exCouponPeriod, Calendar.getCPtr(exCouponCalendar), exCouponCalendar, exCouponConvention.swigValue()), true);
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule, double redemption, Period exCouponPeriod, Calendar exCouponCalendar) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_2(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule, redemption, Period.getCPtr(exCouponPeriod), exCouponPeriod, Calendar.getCPtr(exCouponCalendar), exCouponCalendar), true);
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule, double redemption, Period exCouponPeriod) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_3(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule, redemption, Period.getCPtr(exCouponPeriod), exCouponPeriod), true);
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule, double redemption) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_4(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule, redemption), true);
  }

  public ConvertibleFixedCouponBond(Exercise exercise, double conversionRatio, CallabilitySchedule callability, Date issueDate, int settlementDays, DoubleVector coupons, DayCounter dayCounter, Schedule schedule) {
    this(QuantLibJNI.new_ConvertibleFixedCouponBond__SWIG_5(Exercise.getCPtr(exercise), exercise, conversionRatio, CallabilitySchedule.getCPtr(callability), callability, Date.getCPtr(issueDate), issueDate, settlementDays, DoubleVector.getCPtr(coupons), coupons, DayCounter.getCPtr(dayCounter), dayCounter, Schedule.getCPtr(schedule), schedule), true);
  }

}
