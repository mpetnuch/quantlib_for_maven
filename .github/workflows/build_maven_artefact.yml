name: Build the QuantLib maven artefact

on:
  push: { }
  pull_request: { }
  workflow_dispatch: { }

env:
  QUANTLIB_VERSION:                1.31.0-SNAPSHOT
  JAVA_PATH:                       java
  JAVA_TARGET_PATH:                java/target
  JAVA_RESOURCES_NATIVE_LIBS_PATH: java/src/main/resources/native

jobs:
  build-for-deploy:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-12, windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Build native library for ${{ runner.os }}
        uses: ./.github/actions/build_native_library
        with:
          runner-name: ${{ matrix.os }}
          gpg-secret-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-secret-key-password: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
          upload-path: ${{ env.JAVA_RESOURCES_NATIVE_LIBS_PATH }}

  deploy-quantlib-snapshot:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    needs: [ build-for-deploy ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Download macOS native library
        uses: actions/download-artifact@v3
        with:
          name: native-library-macOS
          path: ${{ env.JAVA_RESOURCES_NATIVE_LIBS_PATH }}

      - name: Download Windows native library
        uses: actions/download-artifact@v3
        with:
          name: native-library-Windows
          path: ${{ env.JAVA_RESOURCES_NATIVE_LIBS_PATH }}

      - name: Delete native library artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: native-library-*

      - name: Set up JDK 11
        uses: ./.github/actions/build_native_library/setup/jdk11

      - name: Set the maven module version
        working-directory: ${{ env.JAVA_PATH }}
        run: |
          ./mvnw --batch-mode --show-version versions:set -DnewVersion=${{ env.QUANTLIB_VERSION }}

      - name: Build native library for ${{ runner.os }}
        uses: ./.github/actions/build_native_library
        with:
          runner-name: ubuntu-22.04
          gpg-secret-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-secret-key-password: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}

      - name: Upload quantlib jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}.jar
          if-no-files-found: error

      - name: Upload quantlib tests jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}-tests.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}-tests.jar
          if-no-files-found: error

      - name: Upload quantlib source jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}-sources.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}-sources.jar
          if-no-files-found: error

      - name: Upload quantlib test source jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}-test-sources.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}-test-sources.jar
          if-no-files-found: error

      - name: Upload quantlib javadoc jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}-javadoc.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}-javadoc.jar
          if-no-files-found: error

      - name: Upload quantlib test javadoc jar
        uses: actions/upload-artifact@v3
        with:
          name: quantlib-${{ env.QUANTLIB_VERSION }}-test-javadoc.jar
          path: ${{ env.JAVA_TARGET_PATH }}/quantlib-${{ env.QUANTLIB_VERSION }}-test-javadoc.jar
          if-no-files-found: error

      - name: Deploy the maven module
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ env.JAVA_PATH }}
        run: |
          ./mvnw --batch-mode --show-version clean deploy
